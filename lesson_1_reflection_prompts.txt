How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using git diff showed which lines changed in the file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could go directly to the line with an issue, give me a bird's eye view of the code base.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   It can be good to have version as automatic version after a saved, however this can become overwhelming overtime. 
   With the size of the history growing and tracking down the issue can become difficult. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Make it earlier to treat a group of files as a logic group.

How can you use the commands git log and git diff to view the history of files?

    git log show summary of changes to the file(s). While git diff shows a comparsion of two or more files

How might using version control make you more confident to make changes that
could break something?

    The greatest feature to me is the ability to roll back.

Now that you have your workspace set up, what do you want to try using Git for?

    Try it to version this file (reflection)


Now that you have your workspace set up, what do you want to try using Git for?

     Continuing the examples in this lesson  
